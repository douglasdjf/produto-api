server:
  port: ${PORT:8081}

spring:
  main:
    allow-bean-definition-overriding: true

  application:
    name: produto-api

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5434}/${DB_NAME:produto}
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:postgres}
    initialization-mode: always
    initialize: true
    continue-on-error: true

  jpa:
    hibernate:
      ddl-auto: create-drop
      format_sql: true
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL9Dialect
  mvn:
    log-resolved-exception: false

  rabbitmq:
    host: ${RABBIT_MQ_HOST:localhost}
    port: ${RABBIT_MQ_PORT:5672}
    username: ${RABBIT_MQ_USER:admin}
    password: ${RABBIT_MQ_PASSWORD:admin}


app-config:
  secrets:
    api-secret: ${API_SECRET:YXV0aC1hcGktc2VjcmV0LWRldi0xMjM0NTY=}

  rabbit:
    exchange:
      product: product.topic

    routingKey:
      product-stock: product-stock-update.routingKey
      sales-confirmation: sales-confirmation.routingKey

    queue:
      product-stock: product-stock-update.queue
      sales-confirmation: sales-confirmation.queue

  services:
    sales: http://${VENDAS_HOST:localhost}:${VENDAS_PORT:8082}


